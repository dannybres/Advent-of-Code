%% day18puzzle2 - Daniel Breslan - Advent Of Code 2022
close all
data = readlines("input.txt").split(",").double();

adder = reshape([-1 0 0;1 0 0;0 -1 0;0 1 0;0 0 -1;0 0 1]',1,3,[]);
neighbours = permute(data + adder,[3,2,1]);
neighbours = reshape(pagetranspose(neighbours),3,[])';
neighbours = neighbours(~ismember(neighbours,data,"rows"),:);

air = false(height(neighbours),1);

for idx = 1:height(neighbours)
    air(idx) = any(neighbours(idx,1) < data(:,1) & ...
        neighbours(idx,2) == data(:,2) & ...
        neighbours(idx,3) == data(:,3)) &...
        any(neighbours(idx,1) > data(:,1) & ...
        neighbours(idx,2) == data(:,2) & ...
        neighbours(idx,3) == data(:,3)) &...
        any(neighbours(idx,2) < data(:,2) & ...
        neighbours(idx,1) == data(:,1) & ...
        neighbours(idx,3) == data(:,3)) &...
        any(neighbours(idx,2) > data(:,2) & ...
        neighbours(idx,1) == data(:,1) & ...
        neighbours(idx,3) == data(:,3)) &...
        any(neighbours(idx,3) < data(:,3) & ...
        neighbours(idx,1) == data(:,1) & ...
        neighbours(idx,2) == data(:,2)) &...
        any(neighbours(idx,3) > data(:,3) & ...
        neighbours(idx,1) == data(:,1) & ...
        neighbours(idx,2) == data(:,2));
end

airCood = neighbours(air,:);
outerNeighbours = neighbours(~air,:);

uAC = unique(airCood,"rows");
for idx = 1:height(uAC)
	uACneighbours = permute(uAC(idx,:) + adder,[3,2,1]);
    uACneighbours = reshape(pagetranspose(uACneighbours),3,[])';
    if ~isempty(uACneighbours(ismember(uACneighbours,outerNeighbours, ...
            'row'),:))
        outerNeighbours = [outerNeighbours; neighbours(ismember( ...
            neighbours, uAC(idx,:),'row'),:)];
    end    
end

day18puzzle2result = height(outerNeighbours)